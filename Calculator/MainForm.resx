<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>